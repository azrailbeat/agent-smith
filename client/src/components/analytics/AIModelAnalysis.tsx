import React, { useState } from 'react';
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { useToast } from '@/hooks/use-toast';
import { Dialog, DialogContent, DialogHeader, DialogTitle, DialogDescription } from '@/components/ui/dialog';
import { Tabs, TabsList, TabsTrigger, TabsContent } from '@/components/ui/tabs';
import { Bot, BrainCircuit, Sparkles, LineChart, ArrowUpRight, AlertTriangle, Cpu } from 'lucide-react';
import { Badge } from '@/components/ui/badge';

interface ModelUsage {
  model: string;
  tokensUsed: number;
  cost: number;
  requestCount: number;
  avgResponseTime: number;
}

interface ServiceStatus {
  serviceName: string;
  status: 'healthy' | 'degraded' | 'down';
  lastUpdated: string;
  details?: {
    queueLength?: number;
    gpuUtilization?: number;
    avgResponseTime?: number;
    requestsPerMinute?: number;
    latestError?: string;
  };
}

interface AIModelAnalysisProps {
  llmUsage?: ModelUsage[];
  llmStatus?: ServiceStatus[];
  isLoading?: boolean;
}

const AIModelAnalysis: React.FC<AIModelAnalysisProps> = ({ 
  llmUsage = [], 
  llmStatus = [], 
  isLoading = false 
}) => {
  const { toast } = useToast();
  const [analysisDialogOpen, setAnalysisDialogOpen] = useState(false);
  const [analysisMode, setAnalysisMode] = useState<'optimization' | 'trends' | 'alerts'>('optimization');
  const [analysisResult, setAnalysisResult] = useState<string | null>(null);
  const [analysisLoading, setAnalysisLoading] = useState(false);

  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ò–ò-–∞–Ω–∞–ª–∏–∑–∞ –¥–∞–Ω–Ω—ã—Ö –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞ LLM
  const runAIAnalysis = async (mode: 'optimization' | 'trends' | 'alerts') => {
    setAnalysisDialogOpen(true);
    setAnalysisMode(mode);
    setAnalysisLoading(true);
    
    try {
      // –ò–º–∏—Ç–∏—Ä—É–µ–º –∑–∞–ø—Ä–æ—Å –∫ —Å–µ—Ä–≤–µ—Ä—É (–≤ —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ API)
      await new Promise(resolve => setTimeout(resolve, 1500));
      
      // –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
      let analysisText = '';
      
      if (mode === 'optimization') {
        const totalCost = llmUsage.reduce((sum, model) => sum + model.cost, 0);
        const totalTokens = llmUsage.reduce((sum, model) => sum + model.tokensUsed, 0);
        const avgResponseTime = llmUsage.reduce((sum, model) => sum + model.avgResponseTime, 0) / (llmUsage.length || 1);
        
        const modelWithHighestCost = [...llmUsage].sort((a, b) => b.cost - a.cost)[0];
        const modelWithLongestResponse = [...llmUsage].sort((a, b) => b.avgResponseTime - a.avgResponseTime)[0];
        
        analysisText = `
## –ê–Ω–∞–ª–∏–∑ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è LLM –º–æ–¥–µ–ª–µ–π

–ù–∞ –æ—Å–Ω–æ–≤–µ –∞–Ω–∞–ª–∏–∑–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π –≤—ã—è–≤–ª–µ–Ω—ã —Å–ª–µ–¥—É—é—â–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:

### –û–±—â–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

1. **–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Å—Ç–æ–∏–º–æ—Å—Ç–∏**: –û–±—â–∏–µ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ LLM —Å–æ—Å—Ç–∞–≤–ª—è—é—Ç $${totalCost.toFixed(2)}. –û—Å–Ω–æ–≤–Ω—ã–µ —Ä–∞—Å—Ö–æ–¥—ã –ø—Ä–∏—Ö–æ–¥—è—Ç—Å—è –Ω–∞ –º–æ–¥–µ–ª—å **${modelWithHighestCost?.model || 'N/A'}** ($${modelWithHighestCost?.cost.toFixed(2) || 0}).

2. **–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏**: –°—Ä–µ–¥–Ω—è—è —Å–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ –≤—Å–µ—Ö –º–æ–¥–µ–ª–µ–π —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç ${avgResponseTime.toFixed(2)} —Å–µ–∫—É–Ω–¥, —á—Ç–æ ${avgResponseTime > 1.5 ? '–≤—ã—à–µ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–≥–æ –ø–æ—Ä–æ–≥–∞ –≤ 1.5 —Å–µ–∫—É–Ω–¥—ã' : '–≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã'}.

3. **–†–∞—Ü–∏–æ–Ω–∞–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Ç–æ–∫–µ–Ω–æ–≤**: –í—Å–µ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ ${totalTokens.toLocaleString()} —Ç–æ–∫–µ–Ω–æ–≤. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏:
   - –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ø—Ä–æ–º–ø—Ç–æ–≤
   - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å–∂–∞—Ç—ã—Ö –≤–µ—Ä—Å–∏–π –º–æ–¥–µ–ª–µ–π –¥–ª—è –∑–∞–¥–∞—á, –Ω–µ —Ç—Ä–µ–±—É—é—â–∏—Ö –≤—ã—Å–æ–∫–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏
   - –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è –¥–ª—è —á–∞—Å—Ç–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º—ã—Ö –ø—Ä–æ–º–ø—Ç–æ–≤

### –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤ –ø–æ —Å–µ—Ä–≤–∏—Å–∞–º

${llmStatus.map(service => 
  `- **${service.serviceName}**: ${
    service.status === 'healthy' ? '‚úÖ –°—Ç–∞–±–∏–ª—å–Ω—ã–π' : 
    service.status === 'degraded' ? '‚ö†Ô∏è –¢—Ä–µ–±—É–µ—Ç –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏' : 
    '‚ùå –¢—Ä–µ–±—É–µ—Ç –Ω–µ–º–µ–¥–ª–µ–Ω–Ω–æ–≥–æ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–∞'
  }${
    service.details?.gpuUtilization && service.details.gpuUtilization > 80 
      ? ' - –≤—ã—Å–æ–∫–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ GPU (' + service.details.gpuUtilization + '%)' 
      : ''
  }`
).join('\n')}

### –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

1. ${modelWithHighestCost?.model || 'N/A'}: –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –∑–∞–º–µ–Ω—É –Ω–∞ –±–æ–ª–µ–µ —ç–∫–æ–Ω–æ–º–∏—á–Ω—É—é –º–æ–¥–µ–ª—å –¥–ª—è –∑–∞–¥–∞—á, –Ω–µ —Ç—Ä–µ–±—É—é—â–∏—Ö –≤—ã—Å–æ–∫–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏.

2. ${modelWithLongestResponse?.model || 'N/A'}: –û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ –∑–∞–ø—Ä–æ—Å—ã –∫ –º–æ–¥–µ–ª–∏ –¥–ª—è –ø–æ–≤—ã—à–µ–Ω–∏—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –æ—Ç–≤–µ—Ç–∞.

3. –†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–≤–æ–¥–∞ –∫–≤–æ—Ç –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –Ω–∞–∏–±–æ–ª–µ–µ –¥–æ—Ä–æ–≥–∏—Ö –º–æ–¥–µ–ª–µ–π.
`;
      } else if (mode === 'trends') {
        analysisText = `
## –ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è LLM –º–æ–¥–µ–ª–µ–π

### –¢–µ–Ω–¥–µ–Ω—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è 

1. **–ò–∑–º–µ–Ω–µ–Ω–∏–µ –º–æ–¥–µ–ª–µ–π**: –ù–∞–±–ª—é–¥–∞–µ—Ç—Å—è ${Math.random() > 0.5 ? '—Ä–æ—Å—Ç' : '—Å–Ω–∏–∂–µ–Ω–∏–µ'} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –±–æ–ª—å—à–∏—Ö –º–æ–¥–µ–ª–µ–π –∏ ${Math.random() > 0.5 ? '—Ä–æ—Å—Ç' : '—Å–Ω–∏–∂–µ–Ω–∏–µ'} –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π.

2. **–†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–æ–≤**: 
   - –í—ã—Å–æ–∫–æ–Ω–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏: ${llmUsage.filter(m => m.requestCount > 1000).map(m => m.model).join(', ') || '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}
   - –ù–∏–∑–∫–æ–Ω–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏: ${llmUsage.filter(m => m.requestCount < 100).map(m => m.model).join(', ') || '–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç'}

3. **–ü—Ä–æ–≥–Ω–æ–∑ –∑–∞—Ç—Ä–∞—Ç**: –ü—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ —Ç–µ–∫—É—â–µ–π –¥–∏–Ω–∞–º–∏–∫–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è, –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä—É–µ–º—ã–µ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –º–µ—Å—è—Ü —Å–æ—Å—Ç–∞–≤—è—Ç $${(llmUsage.reduce((sum, model) => sum + model.cost, 0) * 1.15).toFixed(2)} (—Ä–æ—Å—Ç –Ω–∞ 15%).

### –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ —Ç—Ä–µ–Ω–¥—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è

1. **–ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ—Å—É—Ä—Å–æ–≤**: –ù–∞ –æ—Å–Ω–æ–≤–µ —Ç—Ä–µ–Ω–¥–∞ —Ä–æ—Å—Ç–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å —É–≤–µ–ª–∏—á–µ–Ω–∏—è –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤.

2. **–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—á–µ–π –Ω–∞–≥—Ä—É–∑–∫–∏**: –†–∞—Å–ø—Ä–µ–¥–µ–ª–∏—Ç–µ –Ω–∞–≥—Ä—É–∑–∫—É —Ä–∞–≤–Ω–æ–º–µ—Ä–Ω–æ –º–µ–∂–¥—É –º–æ–¥–µ–ª—è–º–∏ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ø–µ—Ä–µ–≥—Ä—É–∑–∫–∏ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —ç–∫–∑–µ–º–ø–ª—è—Ä–æ–≤.

3. **–°–µ–∑–æ–Ω–Ω—ã–µ —Ç—Ä–µ–Ω–¥—ã**: –ù–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö, –ø–∏–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –æ–∂–∏–¥–∞–µ—Ç—Å—è –≤ —á–∞—Å—ã: 10:00-12:00 –∏ 14:00-16:00. –†–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏–µ –≤–Ω–µ —ç—Ç–∏—Ö –ø–µ—Ä–∏–æ–¥–æ–≤.
`;
      } else if (mode === 'alerts') {
        const problemServices = llmStatus.filter(s => s.status !== 'healthy');
        const highCostModels = llmUsage.filter(m => m.cost > 50);
        const slowModels = llmUsage.filter(m => m.avgResponseTime > 2);
        
        analysisText = `
## –ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∑–æ–Ω –∏ –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è

### –ü—Ä–æ–±–ª–µ–º—ã –≤ —Ä–∞–±–æ—Ç–µ —Å–µ—Ä–≤–∏—Å–æ–≤

${problemServices.length === 0 ? '‚úÖ –í—Å–µ —Å–µ—Ä–≤–∏—Å—ã —Ä–∞–±–æ—Ç–∞—é—Ç –≤ —à—Ç–∞—Ç–Ω–æ–º —Ä–µ–∂–∏–º–µ' : 
  problemServices.map(service => 
    `‚ö†Ô∏è **${service.serviceName}**: ${service.status === 'degraded' ? '–°–Ω–∏–∂–µ–Ω–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å' : '–°–µ—Ä–≤–∏—Å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω'}
    - –ü–æ—Å–ª–µ–¥–Ω–µ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: ${new Date(service.lastUpdated).toLocaleString()}
    ${service.details?.latestError ? `- –û—à–∏–±–∫–∞: ${service.details.latestError}` : ''}
    ${service.details?.queueLength ? `- –†–∞–∑–º–µ—Ä –æ—á–µ—Ä–µ–¥–∏: ${service.details.queueLength} –∑–∞–ø—Ä–æ—Å–æ–≤` : ''}
    `
  ).join('\n')
}

### –ü–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º—ã –∑–∞—Ç—Ä–∞—Ç

${highCostModels.length === 0 ? '‚úÖ –ù–µ—Ç –º–æ–¥–µ–ª–µ–π —Å –≤—ã—Å–æ–∫–∏–º –ø–æ—Ç—Ä–µ–±–ª–µ–Ω–∏–µ–º —Ä–µ—Å—É—Ä—Å–æ–≤' :
  highCostModels.map(model => 
    `üí∞ **${model.model}**: –í—ã—Å–æ–∫–∏–µ –∑–∞—Ç—Ä–∞—Ç—ã ($${model.cost.toFixed(2)})
    - –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤: ${model.tokensUsed.toLocaleString()}
    - –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤: ${model.requestCount.toLocaleString()}
    `
  ).join('\n')
}

### –ü—Ä–æ–±–ª–µ–º—ã –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏

${slowModels.length === 0 ? '‚úÖ –í—Å–µ –º–æ–¥–µ–ª–∏ —Ä–∞–±–æ—Ç–∞—é—Ç —Å –ø—Ä–∏–µ–º–ª–µ–º–æ–π —Å–∫–æ—Ä–æ—Å—Ç—å—é' :
  slowModels.map(model => 
    `üê¢ **${model.model}**: –ù–∏–∑–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å –æ—Ç–≤–µ—Ç–∞ (${model.avgResponseTime.toFixed(2)} —Å–µ–∫)
    - –†–µ–∫–æ–º–µ–Ω–¥—É–µ–º–æ–µ –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞: –¥–æ 2 —Å–µ–∫—É–Ω–¥
    `
  ).join('\n')
}

### –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏

1. ${problemServices.length > 0 ? '–¢—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –∏ –≤–æ–∑–º–æ–∂–Ω—ã–π –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö —Å–µ—Ä–≤–∏—Å–æ–≤' : '–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä–≤–∏—Å–æ–≤'}

2. ${highCostModels.length > 0 ? '–†–∞—Å—Å–º–æ—Ç—Ä–∏—Ç–µ –≤–Ω–µ–¥—Ä–µ–Ω–∏–µ –∫–≤–æ—Ç –∏–ª–∏ –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π –¥–ª—è –¥–æ—Ä–æ–≥–æ—Å—Ç–æ—è—â–∏—Ö –º–æ–¥–µ–ª–µ–π' : '–¢–µ–∫—É—â–∏–µ –∑–∞—Ç—Ä–∞—Ç—ã –Ω–∞ –º–æ–¥–µ–ª–∏ –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –Ω–æ—Ä–º—ã'}

3. ${slowModels.length > 0 ? '–û–ø—Ç–∏–º–∏–∑–∏—Ä—É–π—Ç–µ —Ä–∞–±–æ—Ç—É –º–µ–¥–ª–µ–Ω–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π –ø—É—Ç–µ–º —É–≤–µ–ª–∏—á–µ–Ω–∏—è –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã—Ö —Ä–µ—Å—É—Ä—Å–æ–≤ –∏–ª–∏ –∫—ç—à–∏—Ä–æ–≤–∞–Ω–∏—è' : '–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–π—Ç–µ —Ç–µ–∫—É—â—É—é –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏'}
`;
      }
      
      setAnalysisResult(analysisText);
    } catch (error) {
      toast({
        title: '–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞',
        description: '–ù–µ —É–¥–∞–ª–æ—Å—å –≤—ã–ø–æ–ª–Ω–∏—Ç—å –ò–ò-–∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö',
        variant: 'destructive',
      });
      setAnalysisResult('–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –¥–∞–Ω–Ω—ã—Ö');
    } finally {
      setAnalysisLoading(false);
    }
  };

  return (
    <>
      <Card>
        <CardHeader>
          <CardTitle className="flex items-center">
            <BrainCircuit className="h-5 w-5 mr-2" />
            –£–º–Ω—ã–π –∞–Ω–∞–ª–∏–∑ LLM –º–æ–¥–µ–ª–µ–π
          </CardTitle>
          <CardDescription>
            –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ò–ò –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —Ä–∞–±–æ—Ç—ã –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ LLM –º–æ–¥–µ–ª–µ–π
          </CardDescription>
        </CardHeader>
        <CardContent>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4">
            <Card className="bg-gradient-to-br from-blue-50 to-indigo-50 hover:shadow-md transition-shadow">
              <CardContent className="p-4">
                <div className="flex items-center justify-between mb-4">
                  <div className="h-10 w-10 rounded-full bg-blue-100 flex items-center justify-center">
                    <Sparkles className="h-5 w-5 text-blue-600" />
                  </div>
                  <Badge variant="outline" className="bg-blue-100 text-blue-700 border-blue-200">
                    –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è
                  </Badge>
                </div>
                <h3 className="text-lg font-medium mb-1">–û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–µ—Å—É—Ä—Å–æ–≤</h3>
                <p className="text-sm text-neutral-600 mb-4">
                  –ê–Ω–∞–ª–∏–∑ —Å—Ç–æ–∏–º–æ—Å—Ç–∏ –∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è LLM –º–æ–¥–µ–ª–µ–π —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
                </p>
                <Button 
                  className="w-full" 
                  onClick={() => runAIAnalysis('optimization')}
                  disabled={isLoading || llmUsage.length === 0}
                >
                  –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å <ArrowUpRight className="ml-2 h-4 w-4" />
                </Button>
              </CardContent>
            </Card>

            <Card className="bg-gradient-to-br from-purple-50 to-pink-50 hover:shadow-md transition-shadow">
              <CardContent className="p-4">
                <div className="flex items-center justify-between mb-4">
                  <div className="h-10 w-10 rounded-full bg-purple-100 flex items-center justify-center">
                    <LineChart className="h-5 w-5 text-purple-600" />
                  </div>
                  <Badge variant="outline" className="bg-purple-100 text-purple-700 border-purple-200">
                    –¢—Ä–µ–Ω–¥—ã
                  </Badge>
                </div>
                <h3 className="text-lg font-medium mb-1">–ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤</h3>
                <p className="text-sm text-neutral-600 mb-4">
                  –í—ã—è–≤–ª–µ–Ω–∏–µ —Ç—Ä–µ–Ω–¥–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è LLM –º–æ–¥–µ–ª–µ–π –∏ –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏–µ –±—É–¥—É—â–∏—Ö –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç–µ–π
                </p>
                <Button 
                  className="w-full" 
                  onClick={() => runAIAnalysis('trends')}
                  disabled={isLoading || llmUsage.length === 0}
                >
                  –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å <ArrowUpRight className="ml-2 h-4 w-4" />
                </Button>
              </CardContent>
            </Card>

            <Card className="bg-gradient-to-br from-amber-50 to-orange-50 hover:shadow-md transition-shadow">
              <CardContent className="p-4">
                <div className="flex items-center justify-between mb-4">
                  <div className="h-10 w-10 rounded-full bg-amber-100 flex items-center justify-center">
                    <AlertTriangle className="h-5 w-5 text-amber-600" />
                  </div>
                  <Badge variant="outline" className="bg-amber-100 text-amber-700 border-amber-200">
                    –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è
                  </Badge>
                </div>
                <h3 className="text-lg font-medium mb-1">–ü—Ä–æ–±–ª–µ–º–Ω—ã–µ –∑–æ–Ω—ã</h3>
                <p className="text-sm text-neutral-600 mb-4">
                  –í—ã—è–≤–ª–µ–Ω–∏–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∑–æ–Ω –∏ –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã—Ö —É–∑–∫–∏—Ö –º–µ—Å—Ç –≤ —Ä–∞–±–æ—Ç–µ LLM –º–æ–¥–µ–ª–µ–π
                </p>
                <Button 
                  className="w-full" 
                  onClick={() => runAIAnalysis('alerts')}
                  disabled={isLoading || llmStatus.length === 0}
                >
                  –ê–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å <ArrowUpRight className="ml-2 h-4 w-4" />
                </Button>
              </CardContent>
            </Card>
          </div>

          {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è */}
          {!isLoading && llmUsage.length > 0 && (
            <div className="grid grid-cols-2 md:grid-cols-4 gap-4 mt-6">
              <Card className="bg-neutral-50">
                <CardContent className="p-4">
                  <div className="flex flex-col">
                    <span className="text-sm text-neutral-500">–í—Å–µ–≥–æ –∑–∞–ø—Ä–æ—Å–æ–≤</span>
                    <span className="text-2xl font-semibold">
                      {llmUsage.reduce((sum, model) => sum + model.requestCount, 0).toLocaleString()}
                    </span>
                  </div>
                </CardContent>
              </Card>
              
              <Card className="bg-neutral-50">
                <CardContent className="p-4">
                  <div className="flex flex-col">
                    <span className="text-sm text-neutral-500">–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤</span>
                    <span className="text-2xl font-semibold">
                      {llmUsage.reduce((sum, model) => sum + model.tokensUsed, 0).toLocaleString()}
                    </span>
                  </div>
                </CardContent>
              </Card>
              
              <Card className="bg-neutral-50">
                <CardContent className="p-4">
                  <div className="flex flex-col">
                    <span className="text-sm text-neutral-500">–û–±—â–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å</span>
                    <span className="text-2xl font-semibold">
                      ${llmUsage.reduce((sum, model) => sum + model.cost, 0).toFixed(2)}
                    </span>
                  </div>
                </CardContent>
              </Card>
              
              <Card className="bg-neutral-50">
                <CardContent className="p-4">
                  <div className="flex flex-col">
                    <span className="text-sm text-neutral-500">–°—Ä. –≤—Ä–µ–º—è –æ—Ç–≤–µ—Ç–∞</span>
                    <span className="text-2xl font-semibold">
                      {(llmUsage.reduce((sum, model) => sum + model.avgResponseTime, 0) / llmUsage.length).toFixed(2)} —Å
                    </span>
                  </div>
                </CardContent>
              </Card>
            </div>
          )}
        </CardContent>
      </Card>

      {/* –î–∏–∞–ª–æ–≥ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –∞–Ω–∞–ª–∏–∑–∞ */}
      <Dialog open={analysisDialogOpen} onOpenChange={setAnalysisDialogOpen}>
        <DialogContent className="sm:max-w-2xl">
          <DialogHeader>
            <DialogTitle className="flex items-center">
              <Bot className="h-5 w-5 mr-2" />
              {analysisMode === 'optimization' ? '–ê–Ω–∞–ª–∏–∑ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ LLM –º–æ–¥–µ–ª–µ–π' : 
               analysisMode === 'trends' ? '–ê–Ω–∞–ª–∏–∑ —Ç—Ä–µ–Ω–¥–æ–≤ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è LLM' : 
               '–ê–Ω–∞–ª–∏–∑ –ø—Ä–æ–±–ª–µ–º–Ω—ã—Ö –∑–æ–Ω LLM'}
            </DialogTitle>
            <DialogDescription>
              –ò–ò-–∞–Ω–∞–ª–∏–∑ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ LLM –º–æ–¥–µ–ª–µ–π
            </DialogDescription>
          </DialogHeader>
          
          <div className="py-4">
            {analysisLoading ? (
              <div className="flex flex-col items-center justify-center py-10">
                <div className="animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-primary-600 mb-4"></div>
                <p className="text-neutral-600">–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ LLM –º–æ–¥–µ–ª–µ–π...</p>
              </div>
            ) : (
              <div className="prose max-w-none">
                <div dangerouslySetInnerHTML={{ 
                  __html: analysisResult 
                    ? analysisResult
                        .replace(/\n/g, '<br>')
                        .replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>')
                        .replace(/^(#{1,6})\s+(.+)$/gm, (_, level, text) => {
                          const l = level.length;
                          return `<h${l} class="text-${l === 1 ? 'xl' : l === 2 ? 'lg' : 'base'} font-semibold mb-2 mt-4">${text}</h${l}>`;
                        })
                    : '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è'
                }} />
              </div>
            )}
          </div>
        </DialogContent>
      </Dialog>
    </>
  );
};

export default AIModelAnalysis;